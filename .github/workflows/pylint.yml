name: Pylint

on:
  push:
    branches:
      - main
  workflow_call:
  pull_request:
    branches:
      - "**"

concurrency:
  group: linting-${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow, github.event.pull_request.number) || github.workflow_ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      max-parallel: 10
      matrix:
        os: [windows-2019, windows-2022, macos-11, macos-12, macos-13, macos-14, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        python-version: ["3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      if: ${{ matrix.os == 'macos-11' || matrix.os == 'macos-12' || matrix.os == 'macos-13' || matrix.os == 'macos-14' }}
      run: |
        brew install libffi
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: Install dependencies on Windows
      if: ${{ matrix.os == 'windows-2019' || matrix.os == 'windows-2022' }}
      run: |
        choco install -y openssl
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: Install dependencies on Ubuntu
      if: ${{ matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y libffi-dev python3-cffi
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: pylint **/*.py
